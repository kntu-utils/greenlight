#!/usr/bin/python3
from sys import argv
from json import dump, load


def merge(main, fallback):
    res = dict()
    for k, v in fallback.items():
        if type(v) is dict:
            res[k] = merge(main.get(k, dict()), v)
        else:
            res[k] = main.get(k, None) or fallback[k]
    return res


if __name__ == '__main__':
    if len(argv) != 3:
        print('Combines two translation json and uses fallback for missing keys.\n')
        print('Usage:\n\tfallback main_lang.json fallback_lang.json\n\tfallback fa.json en.json')
        exit(1)

    main = argv[1]
    fallback = argv[2]

    with open(main, encoding='utf-8') as f:
        main_data = load(f)

    with open(fallback, encoding='utf-8') as f:
        fallback_data = load(f)

    res = merge(main_data, fallback_data)

    with open(main, 'w', encoding='utf-8') as out:
        dump(res, out, ensure_ascii=False, indent=2)
